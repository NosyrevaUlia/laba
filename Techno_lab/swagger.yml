openapi: 3.0.0
info:
  title: "RP Flask REST API"
  description: "An API about users and workers"
  version: "1.0.0"

servers:
  - url: "/api"

components:
  schemas:
    User:
      type: "object"
      required:
        - lname
      properties:
        fname:
          type: "string"
        lname:
          type: "string"
  parameters:
    lname:
      name: "lname"
      description: "Last name of the user to get"
      in: path
      required: True
      schema:
        type: "string"

paths:
  /users:
    get:
      operationId: "users.read_all"
      tags:
        - "Users"
      summary: "Read the list of users"
      responses:
        "200":
          description: "Successfully read users list"
    post:
      operationId: "users.create"
      tags:
        - Users
      summary: "Create a user"
      requestBody:
          description: "User to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "user"
                $ref: "#/components/schemas/User"
      responses:
        "201":
          description: "Successfully created user"
  /users/{lname}:
    get:
      operationId: "users.read_one"
      tags:
        - Users
      summary: "Read one user"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "200":
          description: "Successfully read user"
    put:
      tags:
        - Users
      operationId: "users.update"
      summary: "Update a users"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "200":
          description: "Successfully updated user"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "user"
              $ref: "#/components/schemas/User"
    delete:
      tags:
        - Users
      operationId: "users.delete"
      summary: "Delete a user"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "204":
          description: "Successfully deleted user"

  /workers/{lname}:
    get:
      operationId: "workers.read_one"
      tags:
        - Workers
      summary: "Read one worker"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "200":
          description: "Successfully read worker"

  /services:
    get:
      operationId: "services.read_all"
      tags:
        - "Services"
      summary: "Read the list of services"
      responses:
        "200":
          description: "Successfully read services list"
    